{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mali2\\\\Documents\\\\admd_project\\\\repairDukaan-main\\\\screens\\\\UpdatePassword.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { signOut } from \"../redux/auth/authActions\";\nimport { clearingState } from \"../redux/user/userActions\";\n\nfunction UpdatePassword(_ref) {\n  var authState = _ref.authState,\n      navigation = _ref.navigation,\n      loggingOut = _ref.loggingOut,\n      clearUserState = _ref.clearUserState;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPassword = _useState2[0],\n      setCurrentPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPassword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var handleUpdatePassword = function handleUpdatePassword() {\n    return _regeneratorRuntime.async(function handleUpdatePassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"https://enigmatic-mesa-42065.herokuapp.com/api/customer/change\", {\n              currentPassword: currentPassword,\n              newPassword: newPassword\n            }, {\n              headers: {\n                \"token\": authState.token\n              }\n            }).then(function (response) {\n              Alert.alert('Change of Password Successful! Please re-login!');\n              loggingOut();\n              clearUserState();\n              navigation.navigate('LogIn');\n            }).catch(function (error) {\n              Alert.alert(\"Change of Password Unsuccessful!\");\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Change Password\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    value: currentPassword,\n    placeholder: \"Current Password\",\n    placeholderTextColor: \"white\",\n    onChangeText: setCurrentPassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    value: newPassword,\n    placeholder: \"New Password\",\n    placeholderTextColor: \"white\",\n    onChangeText: setNewPassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: handleUpdatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Update Password\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      return navigation.navigate('DrawerNavigation');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Go Back\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'aliceblue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 40,\n    color: \"#fb5b5a\",\n    marginBottom: 40,\n    textAlign: 'center'\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authState: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loggingOut: function loggingOut() {\n      return dispatch(signOut());\n    },\n    clearUserState: function clearUserState() {\n      return dispatch(clearingState());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePassword);","map":{"version":3,"sources":["C:/Users/mali2/Documents/admd_project/repairDukaan-main/screens/UpdatePassword.js"],"names":["React","useState","axios","connect","signOut","clearingState","UpdatePassword","authState","navigation","loggingOut","clearUserState","currentPassword","setCurrentPassword","newPassword","setNewPassword","handleUpdatePassword","post","headers","token","then","response","Alert","alert","navigate","catch","error","console","log","styles","container","logo","inputView","inputText","loginBtn","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","textAlign","width","borderRadius","height","padding","marginTop","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, SafeAreaView, TextInput, Text, Alert, View, Image, TouchableOpacity } from 'react-native';\nimport axios from 'axios'\nimport { connect } from 'react-redux';\nimport {signOut} from \"../redux/auth/authActions\"\nimport { clearingState } from '../redux/user/userActions';\n\nfunction UpdatePassword({ authState, navigation, loggingOut, clearUserState }) {\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [newPassword, setNewPassword] = useState(\"\")\n\n    const handleUpdatePassword = async () => {\n        await axios.post(\"https://enigmatic-mesa-42065.herokuapp.com/api/customer/change\", {currentPassword, newPassword}, {\n            headers: {\n                \"token\": authState.token\n            }\n        })\n        .then((response) => {\n            Alert.alert('Change of Password Successful! Please re-login!')\n            loggingOut()\n            clearUserState()\n            navigation.navigate('LogIn')\n        })\n        .catch((error) => {\n            Alert.alert(\"Change of Password Unsuccessful!\")\n            console.log(error)\n        })\n    }\n\n    return(\n        <SafeAreaView style = {styles.container}>\n            <Text style={styles.logo}>Change Password</Text>\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    value = {currentPassword}\n                    placeholder = 'Current Password'\n                    placeholderTextColor=\"white\"\n                    onChangeText={setCurrentPassword}\n                    secureTextEntry = {true}\n                />\n            </View>\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    value = {newPassword}\n                    placeholder = 'New Password'\n                    placeholderTextColor=\"white\"\n                    onChangeText={setNewPassword}\n                    secureTextEntry = {true}\n                />\n            </View>\n            <TouchableOpacity style={styles.loginBtn} onPress={handleUpdatePassword}>\n                <Text style={styles.loginText}>Update Password</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.loginBtn} onPress={() => navigation.navigate('DrawerNavigation')}>\n                <Text style={styles.loginText}>Go Back</Text>\n            </TouchableOpacity>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'aliceblue',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    logo: {\n        fontWeight:\"bold\",\n        fontSize:40,\n        color:\"#fb5b5a\",\n        marginBottom:40,\n        textAlign: 'center'\n      },\n      inputView:{\n        width:\"80%\",\n        backgroundColor:\"#465881\",\n        borderRadius:25,\n        height:50,\n        marginBottom:20,\n        justifyContent:\"center\",\n        padding:20\n      },\n      inputText:{\n        height:50,\n        color:\"white\"\n      },\n      loginBtn:{\n        width:\"80%\",\n        backgroundColor:\"#fb5b5a\",\n        borderRadius:25,\n        height:50,\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        marginTop:10,\n        marginBottom:10\n      },\n      loginText:{\n        color:\"white\"\n      }\n})\n\nconst mapStateToProps = state => {\n    return {\n        authState: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loggingOut: () => dispatch(signOut()), \n        clearUserState : () => dispatch(clearingState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePassword);"]},"metadata":{},"sourceType":"module"}