{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mali2\\\\Documents\\\\admd_project\\\\repairDukaan-main\\\\screens\\\\Splashscreen.js\";\nimport React, { useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { clearingState, getUserInfo } from \"../redux/user/userActions\";\n\nfunction SplashScreen(_ref) {\n  var userState = _ref.userState,\n      authState = _ref.authState,\n      getInfo = _ref.getInfo,\n      navigation = _ref.navigation,\n      clearUserState = _ref.clearUserState;\n  useEffect(function () {\n    getInfo(authState.token);\n  }, []);\n  console.log(userState);\n  if (!userState.loading && userState.userInfo) navigation.navigate('DrawerNavigation');\n  return React.createElement(View, {\n    style: styles.activity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authState: state.auth,\n    userState: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getInfo: function getInfo(tokenVal) {\n      return dispatch(getUserInfo(tokenVal));\n    },\n    clearUserState: function clearUserState() {\n      return dispatch(clearingState());\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  activity: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SplashScreen);","map":{"version":3,"sources":["C:/Users/mali2/Documents/admd_project/repairDukaan-main/screens/Splashscreen.js"],"names":["React","useEffect","connect","clearingState","getUserInfo","SplashScreen","userState","authState","getInfo","navigation","clearUserState","token","console","log","loading","userInfo","navigate","styles","activity","mapStateToProps","state","auth","user","mapDispatchToProps","dispatch","tokenVal","StyleSheet","create","flex","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,WAAxB;;AAEA,SAASC,YAAT,OAAmF;AAAA,MAA5DC,SAA4D,QAA5DA,SAA4D;AAAA,MAAjDC,SAAiD,QAAjDA,SAAiD;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,cAAiB,QAAjBA,cAAiB;AAC/ET,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,OAAO,CAACD,SAAS,CAACI,KAAX,CAAP;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEA,MAAI,CAACA,SAAS,CAACQ,OAAX,IAAsBR,SAAS,CAACS,QAApC,EACIN,UAAU,CAACO,QAAX,CAAoB,kBAApB;AAEJ,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AACD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHb,IAAAA,SAAS,EAAEa,KAAK,CAACC,IADd;AAEHf,IAAAA,SAAS,EAAEc,KAAK,CAACE;AAFd,GAAP;AAIH,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHhB,IAAAA,OAAO,EAAE,iBAACiB,QAAD;AAAA,aAAcD,QAAQ,CAACpB,WAAW,CAACqB,QAAD,CAAZ,CAAtB;AAAA,KADN;AAEHf,IAAAA,cAAc,EAAE;AAAA,aAAMc,QAAQ,CAACrB,aAAa,EAAd,CAAd;AAAA;AAFb,GAAP;AAIH,CALD;;AAOA,IAAMc,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,QAAQ,EAAE;AACNU,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE;AAFV;AADmB,CAAlB,CAAf;AAOA,eAAe3B,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport { StyleSheet } from 'react-native';\r\nimport { View } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { clearingState, getUserInfo } from '../redux/user/userActions';\r\n\r\nfunction SplashScreen({userState, authState, getInfo, navigation, clearUserState}) {\r\n    useEffect(() => {\r\n        getInfo(authState.token)\r\n    }, [])\r\n\r\n    console.log(userState)\r\n\r\n    if (!userState.loading && userState.userInfo)\r\n        navigation.navigate('DrawerNavigation')\r\n    \r\n    return (\r\n        <View style = {styles.activity}>\r\n            <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        </View>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authState: state.auth,\r\n        userState: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getInfo: (tokenVal) => dispatch(getUserInfo(tokenVal)),\r\n        clearUserState: () => dispatch(clearingState())\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    activity: {\r\n        flex: 1,\r\n        justifyContent: \"center\"\r\n      }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SplashScreen);"]},"metadata":{},"sourceType":"module"}